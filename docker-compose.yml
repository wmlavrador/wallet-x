version: "3.7"
services:

  app_wallet_x:
    build:
      context: infra
      dockerfile: dockerfiles/app.dockerfile
    container_name: app_wallet_x
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./application:/var/www/
    networks:
      - network_walletx

  db_wallet_x:
    image: mysql:8.0
    container_name: db_wallet_x
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${DB_PORT}:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PORT: ${DB_PORT}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./infra/mysql_data:/var/lib/mysql
    networks:
      - network_walletx

  nginx_wallet_x:
    image: nginx:1.20-alpine
    container_name: nginx_wallet_x
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "80:80"
    volumes:
      - ./application:/var/www
      - ./infra/nginx:/etc/nginx/templates
    networks:
      - network_walletx

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    env_file:
      - .env
    ports:
      - "${KAFKA_PORT}:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - ${DOCKER_SOCKET_FILE}:/var/run/docker.sock
    depends_on:
      - zookeeper

networks:
  network_walletx:
    driver: bridge
